!function(){var a=angular.module("btorfs.multiselect",["btorfs.multiselect.templates"]);a.getRecursiveProperty=function(e,t){return t.split(".").reduce(function(e,t){return e?e[t]:null},e)},a.directive("multiselect",["$filter","$document","$log",function(e,c,r){return{restrict:"AE",scope:{options:"=",displayProp:"@",idProp:"@",searchLimit:"=?",selectionLimit:"=?",showSelectAll:"=?",showUnselectAll:"=?",showSearch:"=?",searchFilter:"=?",disabled:"=?ngDisabled",labels:"=?",classesBtn:"=?",showTooltip:"=?",placeholder:"@?"},require:"ngModel",templateUrl:"multiselect.html",controller:["$scope",function(e){angular.isUndefined(e.classesBtn)&&(e.classesBtn=["btn-block","btn-default"])}],link:function(s,t,e,l){s.selectionLimit=s.selectionLimit||0,s.searchLimit=s.searchLimit||25,s.searchFilter="",s.resolvedOptions=[],"function"!=typeof s.options&&(s.resolvedOptions=s.options),void 0!==e.disabled&&(s.disabled=!0);function n(e){t[0].contains(e.target)||s.$apply(function(){s.open=!1})}function i(){l.$viewValue?(s.selectedOptions=s.resolvedOptions.filter(function(e){for(var t=s.getId(e),n=0;n<l.$viewValue.length;n++)if(t===s.getId(l.$viewValue[n]))return!0;return!1}),s.unselectedOptions=s.resolvedOptions.filter(function(e){return s.selectedOptions.indexOf(e)<0})):(s.selectedOptions&&(s.selectedOptions=[]),s.unselectedOptions=s.resolvedOptions.slice())}c.on("click",n);s.toggleDropdown=function(){s.open=!s.open,s.resolvedOptions=s.options,i()},l.$render=function(){i()},l.$viewChangeListeners.push(function(){i()}),l.$isEmpty=function(e){return!e||0===e.length};var o=s.$watch("selectedOptions",function(){l.$setViewValue(angular.copy(s.selectedOptions))},!0);s.$on("$destroy",function(){c.off("click",n),o&&o()}),s.getButtonText=function(){var e;return s.selectedOptions&&1===s.selectedOptions.length?s.getDisplay(s.selectedOptions[0]):!(s.selectedOptions&&1<s.selectedOptions.length)||0===(e=angular.isDefined(s.selectedOptions)?s.selectedOptions.length:0)?s.labels&&s.labels.select?s.labels.select:s.placeholder||"Select":e+" "+(s.labels&&s.labels.itemsSelected?s.labels.itemsSelected:"selected")},s.getButtonCountText=function(){var e=angular.isDefined(s.options)?s.options.length:100,e=(angular.isDefined(s.selectedOptions)?s.selectedOptions.length:0)+" / "+e;return s.labels&&s.labels.select?e+" "+s.labels.select:e+" "+(s.placeholder||"Select")},s.selectAll=function(){s.selectedOptions=s.resolvedOptions.slice(),s.unselectedOptions=[]},s.unselectAll=function(){s.selectedOptions=[],s.unselectedOptions=s.resolvedOptions.slice()},s.toggleItem=function(e){void 0===s.selectedOptions&&(s.selectedOptions=[]);var t=s.selectedOptions.indexOf(e),n=-1!==t;n?(s.unselectedOptions.push(s.selectedOptions[t]),s.selectedOptions.splice(t,1)):!n&&(0===s.selectionLimit||s.selectedOptions.length<s.selectionLimit)&&(t=s.unselectedOptions.indexOf(e),s.unselectedOptions.splice(t,1),s.selectedOptions.push(e))},s.getId=function(e){return!angular.isString(e)&&angular.isObject(e)?s.idProp?a.getRecursiveProperty(e,s.idProp):(r.error("Multiselect: when using objects as model, a idProp value is mandatory."),""):e},s.getDisplay=function(e){return!angular.isString(e)&&angular.isObject(e)?s.displayProp?a.getRecursiveProperty(e,s.displayProp):(r.error("Multiselect: when using objects as model, a displayProp value is mandatory."),""):e},s.isSelected=function(e){if(s.selectedOptions)for(var t=s.getId(e),n=0;n<s.selectedOptions.length;n++){var l=s.selectedOptions[n];if(s.getId(l)===t)return!0}return!1},s.updateOptions=function(){"function"==typeof s.options&&s.options().then(function(e){s.resolvedOptions=e,i()})},s.search=function(){var t=0;return function(e){return!(t>s.searchLimit)&&((e=s.getDisplay(e))?((e=-1<e.toLowerCase().indexOf(s.searchFilter.toLowerCase()))&&t++,e):void 0)}}}}}])}(),angular.module("btorfs.multiselect.templates",["multiselect.html"]),angular.module("multiselect.html",[]).run(["$templateCache",function(e){e.put("multiselect.html",'<div class="btn-group multiselect-block" style="width: 100%">\n    <button type="button" class="btn dropdown-toggle" ng-class="classesBtn" ng-click="toggleDropdown()"\n        ng-disabled="disabled" style="white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis">\n        {{getButtonCountText()}}&nbsp;<span class="caret"></span>\n    </button>\n\n    <ul class="dropdown-menu dropdown-menu-form" ng-style="{display: open ? \'block\' : \'none\'}"\n        style="width: 100%; overflow-x: auto">\n        <li ng-show="showSearch">\n            <div class="dropdown-header">\n                <input type="text" class="form-control" style="width: 100%" ng-model="searchFilter"\n                    placeholder="{{labels.search || \'Search...\'}}" ng-change="updateOptions()" />\n            </div>\n        </li>\n\n        <li ng-show="showSearch" class="divider"></li>\n\n        <div class="multiselect-action">\n            <li ng-show="showSelectAll">\n                <a ng-click="selectAll()" href="">\n                    <span class="glyphicon glyphicon-ok"></span> {{labels.selectAll || \'Select All\'}}\n                </a>\n            </li>\n            <li ng-show="showUnselectAll">\n                <a ng-click="unselectAll()" href="">\n                    <span class="glyphicon glyphicon-remove"></span> {{labels.unselectAll || \'Unselect All\'}}\n                </a>\n            </li>\n        </div>\n\n        <li ng-show="(showSelectAll || showUnselectAll)" class="divider"></li>\n\n        <li role="presentation" ng-repeat="option in selectedOptions" class="active">\n            <a class="item-selected" href="" title="{{showTooltip ? getDisplay(option) : \'\'}}"\n                ng-click="toggleItem(option); $event.stopPropagation()"\n                style="overflow-x: hidden; text-overflow: ellipsis">\n                <span class="glyphicon glyphicon-remove"></span>\n                {{getDisplay(option)}}\n            </a>\n        </li>\n\n        <li ng-show="selectedOptions.length > 0" class="divider selection-divider"></li>\n\n        <li role="presentation" ng-repeat="option in unselectedOptions | filter:search() | limitTo: searchLimit"\n            ng-if="!isSelected(option)"\n            ng-class="{disabled : selectionLimit && selectedOptions.length >= selectionLimit}">\n            <a class="item-unselected" href="" title="{{showTooltip ? getDisplay(option) : \'\'}}"\n                ng-click="toggleItem(option); $event.stopPropagation()"\n                style="overflow-x: hidden; text-overflow: ellipsis">\n                {{getDisplay(option)}}\n            </a>\n        </li>\n\n        <li class="divider" ng-show="selectionLimit > 1"></li>\n\n        <li role="presentation" ng-show="selectionLimit > 1">\n            <a>{{selectedOptions.length || 0}} / {{selectionLimit}} {{labels.itemsSelected || \'selected\'}}</a>\n        </li>\n    </ul>\n</div>')}]);